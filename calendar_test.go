package calendar

import (
	"fmt"
	"testing"
)

func ExamplegenDay() {
	ly := GenLunarYear(1987)
	jd := make([]float64, 21)
	jd[0], _ = CalendarToJD(true, 1986, 12, 30.0)                //冬月廿九
	jd[1], _ = CalendarToJD(true, 1986, 12, 31+float64(2)/24)    //腊月初一
	jd[2], _ = CalendarToJD(true, 1987, 1, 1+float64(4)/24)      //腊月初二
	jd[3], _ = CalendarToJD(true, 1987, 1, 5+float64(6)/24)      //腊月初六，大雪节气月末
	jd[4], _ = CalendarToJD(true, 1987, 1, 6+float64(8)/24)      //腊月初七，小寒，节气月初
	jd[5], _ = CalendarToJD(true, 1987, 1, 28+float64(10)/24)    //腊月廿九
	jd[6], _ = CalendarToJD(true, 1987, 1, 29+float64(12)/24)    //正月初一
	jd[7], _ = CalendarToJD(true, 1987, 2, 3+float64(14)/24)     //正月初六，小寒，节气月末
	jd[8], _ = CalendarToJD(true, 1987, 2, 4+float64(16)/24)     //正月初七，立春，节气月初
	jd[9], _ = CalendarToJD(true, 1987, 6, 5+float64(18)/24)     //五月初十，节气月末
	jd[10], _ = CalendarToJD(true, 1987, 6, 6+float64(20)/24)    //五月十一，芒种，节气月初
	jd[11], _ = CalendarToJD(true, 1987, 6, 25+float64(22)/24)   //五月三十
	jd[12], _ = CalendarToJD(true, 1987, 6, 26+float64(22.9)/24) //六月初一
	jd[13], _ = CalendarToJD(true, 1987, 7, 6+float64(23)/24)    //六月十一，芒种，节气月末
	jd[14], _ = CalendarToJD(true, 1987, 7, 7+float64(23.1)/24)  //六月十二，小暑，节气月初
	jd[15], _ = CalendarToJD(true, 1987, 7, 25+float64(3)/24)    //六月三十
	jd[16], _ = CalendarToJD(true, 1987, 7, 26+float64(5)/24)    //闰六月初一
	jd[17], _ = CalendarToJD(true, 1987, 8, 7+float64(7)/24)     //闰六月十三，小暑，节气月末
	jd[18], _ = CalendarToJD(true, 1987, 8, 8+float64(9)/24)     //闰六月十四，立秋，节气月初
	jd[19], _ = CalendarToJD(true, 1987, 8, 23+float64(11)/24)   //闰六月廿九
	jd[20], _ = CalendarToJD(true, 1987, 8, 24+float64(13)/24)   //七月初一，处暑，中气
	for i, v := range jd {
		fmt.Println(i)
		fmt.Println(genDay(v, ly))
		fmt.Println("=================================")
	}
	// Output:
	// 0
	// 公元1986年12月30日
	// 星期二 摩羯座
	// JD 2446795
	// 农历【虎】冬月（小）廿九
	// 丙寅年 庚子月 戊申日
	// 四柱：丙寅 庚子 戊申 壬子
	// =================================
	// 1
	// 公元1986年12月31日
	// 星期三 摩羯座
	// JD 2446796
	// 农历【虎】腊月（小）初一
	// 丙寅年 辛丑月 己酉日
	// 四柱：丙寅 庚子 己酉 乙丑
	// =================================
	// 2
	// 公元1987年1月1日
	// 星期四 摩羯座
	// JD 2446797
	// 农历【虎】腊月（小）初二
	// 丙寅年 辛丑月 庚戌日
	// 四柱：丙寅 庚子 庚戌 戊寅
	// =================================
	// 3
	// 公元1987年1月5日
	// 星期一 摩羯座
	// JD 2446801
	// 农历【虎】腊月（小）初六
	// 丙寅年 辛丑月 甲寅日
	// 四柱：丙寅 庚子 甲寅 丁卯
	// =================================
	// 4
	// 公元1987年1月6日
	// 星期二 摩羯座
	// JD 2446802
	// 农历【虎】腊月（小）初七
	// 丙寅年 辛丑月 乙卯日
	// 四柱：丙寅 辛丑 乙卯 庚辰
	// =================================
	// 5
	// 公元1987年1月28日
	// 星期三 水瓶座
	// JD 2446824
	// 农历【虎】腊月（小）廿九
	// 丙寅年 辛丑月 丁丑日
	// 四柱：丙寅 辛丑 丁丑 乙巳
	// =================================
	// 6
	// 公元1987年1月29日
	// 星期四 水瓶座
	// JD 2446825
	// 农历【兔】正月（大）初一
	// 丁卯年 壬寅月 戊寅日
	// 四柱：丙寅 辛丑 戊寅 戊午
	// =================================
	// 7
	// 公元1987年2月3日
	// 星期二 水瓶座
	// JD 2446830
	// 农历【兔】正月（大）初六
	// 丁卯年 壬寅月 癸未日
	// 四柱：丙寅 辛丑 癸未 己未
	// =================================
	// 8
	// 公元1987年2月4日
	// 星期三 水瓶座
	// JD 2446831
	// 农历【兔】正月（大）初七
	// 丁卯年 壬寅月 甲申日
	// 四柱：丁卯 壬寅 甲申 壬申
	// =================================
	// 9
	// 公元1987年6月5日
	// 星期五 双子座
	// JD 2446952
	// 农历【兔】五月（大）初十
	// 丁卯年 丙午月 乙酉日
	// 四柱：丁卯 乙巳 乙酉 乙酉
	// =================================
	// 10
	// 公元1987年6月6日
	// 星期六 双子座
	// JD 2446953
	// 农历【兔】五月（大）十一
	// 丁卯年 丙午月 丙戌日
	// 四柱：丁卯 丙午 丙戌 戊戌
	// =================================
	// 11
	// 公元1987年6月25日
	// 星期四 巨蟹座
	// JD 2446972
	// 农历【兔】五月（大）三十
	// 丁卯年 丙午月 乙巳日
	// 四柱：丁卯 丙午 乙巳 丁亥
	// =================================
	// 12
	// 公元1987年6月26日
	// 星期五 巨蟹座
	// JD 2446973
	// 农历【兔】六月（大）初一
	// 丁卯年 丁未月 丙午日
	// 四柱：丁卯 丙午 丙午 己亥
	// =================================
	// 13
	// 公元1987年7月6日
	// 星期一 巨蟹座
	// JD 2446983
	// 农历【兔】六月（大）十一
	// 丁卯年 丁未月 丙辰日
	// 四柱：丁卯 丙午 丙辰 戊子
	// =================================
	// 14
	// 公元1987年7月7日
	// 星期二 巨蟹座
	// JD 2446984
	// 农历【兔】六月（大）十二
	// 丁卯年 丁未月 丁巳日
	// 四柱：丁卯 丁未 丁巳 庚子
	// =================================
	// 15
	// 公元1987年7月25日
	// 星期六 狮子座
	// JD 2447002
	// 农历【兔】六月（大）三十
	// 丁卯年 丁未月 乙亥日
	// 四柱：丁卯 丁未 乙亥 戊寅
	// =================================
	// 16
	// 公元1987年7月26日
	// 星期日 狮子座
	// JD 2447003
	// 农历【兔】闰六月（小）初一
	// 丁卯年 丁未月 丙子日
	// 四柱：丁卯 丁未 丙子 辛卯
	// =================================
	// 17
	// 公元1987年8月7日
	// 星期五 狮子座
	// JD 2447015
	// 农历【兔】闰六月（小）十三
	// 丁卯年 丁未月 戊子日
	// 四柱：丁卯 丁未 戊子 丙辰
	// =================================
	// 18
	// 公元1987年8月8日
	// 星期六 狮子座
	// JD 2447016
	// 农历【兔】闰六月（小）十四
	// 丁卯年 丁未月 己丑日
	// 四柱：丁卯 戊申 己丑 己巳
	// =================================
	// 19
	// 公元1987年8月23日
	// 星期日 狮子座
	// JD 2447031
	// 农历【兔】闰六月（小）廿九
	// 丁卯年 丁未月 甲辰日
	// 四柱：丁卯 戊申 甲辰 庚午
	// =================================
	// 20
	// 公元1987年8月24日
	// 星期一 处女座
	// JD 2447032
	// 农历【兔】七月（大）初一
	// 丁卯年 戊申月 乙巳日
	// 四柱：丁卯 戊申 乙巳 癸未
	// =================================
}

func ExampleDayCalendar() {
	tt := []struct {
		y, m int
		d    float64
		AD   bool
	}{
		{2018, 6, 6, true},
		{1582, 10, 6, true},
		{698, 12, 7, true},
		{698, 12, 8, true},
		{105, 11, 25, false},
		{105, 11, 26, false},
		{102, 7, 26, false},
		{102, 7, 27, false},
		{506, 11, 18, false},
		{506, 11, 19, false},
	}
	for _, tc := range tt {
		day, err := DayCalendar(tc.y, tc.m, tc.d, tc.AD, nil)
		if err != nil {
			fmt.Printf("DayCalendar failed:%v\n", err)
			return
		}
		fmt.Println(day)
	}
	// Output:
	// 公元2018年6月6日
	// 星期三 双子座
	// JD 2458276
	// 农历【狗】四月（大）廿三
	// 戊戌年 丁巳月 己巳日
	// 四柱：戊戌 戊午 己巳 甲子
	// 公元1582年10月16日
	// 星期六 天秤座
	// JD 2299162
	// 农历【马】九月（小）二十
	// 壬午年 庚戌月 乙亥日
	// 四柱：壬午 庚戌 乙亥 丙子
	// 公元698年12月7日
	// 星期六 射手座
	// JD 1976343
	// 农历【狗】十月（大）三十
	// 戊戌年 癸亥月 丙辰日
	// 四柱：戊戌 甲子 丙辰 戊子
	// 公元698年12月8日
	// 星期日 射手座
	// JD 1976344
	// 农历【猪】正月（大）初一
	// 己亥年 甲子月 丁巳日
	// 四柱：戊戌 甲子 丁巳 庚子
	// 公元前105年11月25日
	// 星期日 射手座
	// JD 1683401
	// 农历【鼠】后九月（大）三十
	// 丙子年 戊戌月 甲午日
	// 四柱：丙子 己亥 甲午 甲子
	// 公元前105年11月26日
	// 星期一 射手座
	// JD 1683402
	// 农历【鼠】十月（小）初一
	// 丙子年 己亥月 乙未日
	// 四柱：丙子 己亥 乙未 丙子
	// 公元前102年7月26日
	// 星期日 狮子座
	// JD 1684374
	// 农历【兔】六月（小）廿九
	// 己卯年 辛未月 丁未日
	// 四柱：己卯 辛未 丁未 庚子
	// 公元前102年7月27日
	// 星期一 狮子座
	// JD 1684375
	// 农历【兔】闰六月（大）初一
	// 己卯年 辛未月 戊申日
	// 四柱：己卯 辛未 戊申 壬子
	// 公元前506年11月18日
	// 星期二 天蝎座
	// JD 1536928
	// 农历【羊】腊月（大）三十
	// 乙未年 丁亥月 辛巳日
	// 四柱：乙未 丁亥 辛巳 戊子
	// 公元前506年11月19日
	// 星期三 天蝎座
	// JD 1536929
	// 农历【羊】闰十三（大）初一
	// 乙未年 丁亥月 壬午日
	// 四柱：乙未 丁亥 壬午 庚子
}

func ExampleMonthCalendar() {
	tt := []struct {
		y, m int
		AD   bool
	}{
		{1998, 6, true},
		{689, 12, true},
		{690, 1, true},
		{690, 2, true},
		{707, 11, false},
		{707, 12, false},
	}
	for _, tc := range tt {
		month, err := MonthCalendar(tc.y, tc.m, tc.AD, nil)
		if err != nil {
			fmt.Printf("MonthCalendar failed:%v\n", err)
			return
		}
		fmt.Println(month)
		month.SVG(800, 600, "", "http://oumnldfwl.bkt.clouddn.com/timg-2.jpeg")
	}
	// Output:
	//📅                    6月
	//     日    一    二    三    四    五    六
	//☀️         ㏠    ㏡    ㏢    ㏣    ㏤    ㏥
	//🌛        初七  初八  初九  初十  十一  十二
	//☀️   ㏦    ㏧    ㏨    ㏩    ㏪    ㏫    ㏬
	//🌛  十三  十四  十五  十六  十七  十八  十九
	//☀️   ㏭    ㏮    ㏯    ㏰    ㏱    ㏲    ㏳
	//🌛  二十  廿一  廿二  廿三  廿四  廿五  廿六
	//☀️   ㏴    ㏵    ㏶    ㏷    ㏸    ㏹    ㏺
	//🌛  廿七  廿八  廿九  五月® 初二  初三  初四
	//☀️   ㏻    ㏼    ㏽
	//🌛  初五  初六  初七
	//
	//芒种：6日 5ʰ13ᵐ23ˢ
	//夏至：21日 22ʰ2ᵐ35ˢ
	//📅                    12月
	//     日    一    二    三    四    五    六
	//☀️                     ㏠    ㏡    ㏢    ㏣
	//🌛                    十四  十五  十六  十七
	//☀️   ㏤    ㏥    ㏦    ㏧    ㏨    ㏩    ㏪
	//🌛  十八  十九  二十  廿一  廿二  廿三  廿四
	//☀️   ㏫    ㏬    ㏭    ㏮    ㏯    ㏰    ㏱
	//🌛  廿五  廿六  廿七  廿八  廿九  三十  正月
	//☀️   ㏲    ㏳    ㏴    ㏵    ㏶    ㏷    ㏸
	//🌛  初二  初三  初四  初五  初六  初七  初八
	//☀️   ㏹    ㏺    ㏻    ㏼    ㏽    ㏾
	//🌛  初九  初十  十一  十二  十三  十四
	//
	//大雪：3日 12ʰ0ᵐ0ˢ
	//冬至：18日 12ʰ0ᵐ0ˢ
	//📅                    1月
	//     日    一    二    三    四    五    六
	//☀️                                       ㏠
	//🌛                                      十五
	//☀️   ㏡    ㏢    ㏣    ㏤    ㏥    ㏦    ㏧
	//🌛  十六  十七  十八  十九  二十  廿一  廿二
	//☀️   ㏨    ㏩    ㏪    ㏫    ㏬    ㏭    ㏮
	//🌛  廿三  廿四  廿五  廿六  廿七  廿八  廿九
	//☀️   ㏯    ㏰    ㏱    ㏲    ㏳    ㏴    ㏵
	//🌛  腊月  初二  初三  初四  初五  初六  初七
	//☀️   ㏶    ㏷    ㏸    ㏹    ㏺    ㏻    ㏼
	//🌛  初八  初九  初十  十一  十二  十三  十四
	//☀️   ㏽    ㏾
	//🌛  十五  十六
	//
	//小寒：2日 12ʰ0ᵐ0ˢ
	//大寒：17日 12ʰ0ᵐ0ˢ
	//📅                    2月
	//     日    一    二    三    四    五    六
	//☀️               ㏠    ㏡    ㏢    ㏣    ㏤
	//🌛              十七  十八  十九  二十  廿一
	//☀️   ㏥    ㏦    ㏧    ㏨    ㏩    ㏪    ㏫
	//🌛  廿二  廿三  廿四  廿五  廿六  廿七  廿八
	//☀️   ㏬    ㏭    ㏮    ㏯    ㏰    ㏱    ㏲
	//🌛  廿九  三十  一月  初二  初三  初四  初五
	//☀️   ㏳    ㏴    ㏵    ㏶    ㏷    ㏸    ㏹
	//🌛  初六  初七  初八  初九  初十  十一  十二
	//☀️   ㏺    ㏻
	//🌛  十三  十四
	//
	//立春：2日 12ʰ0ᵐ0ˢ
	//雨水：17日 12ʰ0ᵐ0ˢ
	//📅                    11月
	//     日    一    二    三    四    五    六
	//☀️   ㏠    ㏡    ㏢    ㏣    ㏤    ㏥    ㏦
	//🌛  十一  十二  十三  十四  十五  十六  十七
	//☀️   ㏧    ㏨    ㏩    ㏪    ㏫    ㏬    ㏭
	//🌛  十八  十九  二十  廿一  廿二  廿三  廿四
	//☀️   ㏮    ㏯    ㏰    ㏱    ㏲    ㏳    ㏴
	//🌛  廿五  廿六  廿七  廿八  廿九  三十   ⑬®
	//☀️   ㏵    ㏶    ㏷    ㏸    ㏹    ㏺    ㏻
	//🌛  初二  初三  初四  初五  初六  初七  初八
	//☀️   ㏼    ㏽
	//🌛  初九  初十
	//
	//立冬：14日 9ʰ14ᵐ26ˢ
	//小雪：29日 1ʰ40ᵐ50ˢ
	//📅                    12月
	//     日    一    二    三    四    五    六
	//☀️               ㏠    ㏡    ㏢    ㏣    ㏤
	//🌛              十一  十二  十三  十四  十五
	//☀️   ㏥    ㏦    ㏧    ㏨    ㏩    ㏪    ㏫
	//🌛  十六  十七  十八  十九  二十  廿一  廿二
	//☀️   ㏬    ㏭    ㏮    ㏯    ㏰    ㏱    ㏲
	//🌛  廿三  廿四  廿五  廿六  廿七  廿八  廿九
	//☀️   ㏳    ㏴    ㏵    ㏶    ㏷    ㏸    ㏹
	//🌛  正月  初二  初三  初四  初五  初六  初七
	//☀️   ㏺    ㏻    ㏼    ㏽    ㏾
	//🌛  初八  初九  初十  十一  十二
	//
	//大雪：13日 18ʰ28ᵐ8ˢ
	//冬至：28日 12ʰ5ᵐ10ˢ
}

func ExampleYearCalendar() {

	// year, err := YearCalendar(1, false)
	year, err := YearCalendar(2017, true)
	if err != nil {
		fmt.Printf("YearCalendar failed:%v\n", err)
		return
	}
	fmt.Println(year)
	// Output:
	//🗓️                 2017年（平）
	//📅                    1月
	//     日    一    二    三    四    五    六
	//☀️   ㏠    ㏡    ㏢    ㏣    ㏤    ㏥    ㏦
	//🌛  初四  初五  初六  初七  初八  初九  初十
	//☀️   ㏧    ㏨    ㏩    ㏪    ㏫    ㏬    ㏭
	//🌛  十一  十二  十三  十四  十五  十六  十七
	//☀️   ㏮    ㏯    ㏰    ㏱    ㏲    ㏳    ㏴
	//🌛  十八  十九  二十  廿一  廿二  廿三  廿四
	//☀️   ㏵    ㏶    ㏷    ㏸    ㏹    ㏺    ㏻
	//🌛  廿五  廿六  廿七  廿八  廿九  三十  正月
	//☀️   ㏼    ㏽    ㏾
	//🌛  初二  初三  初四
	//
	//小寒：5日 11ʰ55ᵐ44ˢ
	//大寒：20日 5ʰ23ᵐ36ˢ
	//📅                    2月
	//     日    一    二    三    四    五    六
	//☀️                     ㏠    ㏡    ㏢    ㏣
	//🌛                    初五  初六  初七  初八
	//☀️   ㏤    ㏥    ㏦    ㏧    ㏨    ㏩    ㏪
	//🌛  初九  初十  十一  十二  十三  十四  十五
	//☀️   ㏫    ㏬    ㏭    ㏮    ㏯    ㏰    ㏱
	//🌛  十六  十七  十八  十九  二十  廿一  廿二
	//☀️   ㏲    ㏳    ㏴    ㏵    ㏶    ㏷    ㏸
	//🌛  廿三  廿四  廿五  廿六  廿七  廿八  廿九
	//☀️   ㏹    ㏺    ㏻
	//🌛  二月  初二  初三
	//
	//立春：3日 23ʰ34ᵐ3ˢ
	//雨水：18日 19ʰ31ᵐ19ˢ
	//📅                    3月
	//     日    一    二    三    四    五    六
	//☀️                     ㏠    ㏡    ㏢    ㏣
	//🌛                    初四  初五  初六  初七
	//☀️   ㏤    ㏥    ㏦    ㏧    ㏨    ㏩    ㏪
	//🌛  初八  初九  初十  十一  十二  十三  十四
	//☀️   ㏫    ㏬    ㏭    ㏮    ㏯    ㏰    ㏱
	//🌛  十五  十六  十七  十八  十九  二十  廿一
	//☀️   ㏲    ㏳    ㏴    ㏵    ㏶    ㏷    ㏸
	//🌛  廿二  廿三  廿四  廿五  廿六  廿七  廿八
	//☀️   ㏹    ㏺    ㏻    ㏼    ㏽    ㏾
	//🌛  廿九  三十  三月  初二  初三  初四
	//
	//惊蛰：5日 17ʰ32ᵐ43ˢ
	//春分：20日 18ʰ28ᵐ38ˢ
	//📅                    4月
	//     日    一    二    三    四    五    六
	//☀️                                       ㏠
	//🌛                                      初五
	//☀️   ㏡    ㏢    ㏣    ㏤    ㏥    ㏦    ㏧
	//🌛  初六  初七  初八  初九  初十  十一  十二
	//☀️   ㏨    ㏩    ㏪    ㏫    ㏬    ㏭    ㏮
	//🌛  十三  十四  十五  十六  十七  十八  十九
	//☀️   ㏯    ㏰    ㏱    ㏲    ㏳    ㏴    ㏵
	//🌛  二十  廿一  廿二  廿三  廿四  廿五  廿六
	//☀️   ㏶    ㏷    ㏸    ㏹    ㏺    ㏻    ㏼
	//🌛  廿七  廿八  廿九  四月  初二  初三  初四
	//☀️   ㏽
	//🌛  初五
	//
	//清明：4日 22ʰ17ᵐ19ˢ
	//谷雨：20日 5ʰ27ᵐ0ˢ
	//📅                    5月
	//     日    一    二    三    四    五    六
	//☀️         ㏠    ㏡    ㏢    ㏣    ㏤    ㏥
	//🌛        初六  初七  初八  初九  初十  十一
	//☀️   ㏦    ㏧    ㏨    ㏩    ㏪    ㏫    ㏬
	//🌛  十二  十三  十四  十五  十六  十七  十八
	//☀️   ㏭    ㏮    ㏯    ㏰    ㏱    ㏲    ㏳
	//🌛  十九  二十  廿一  廿二  廿三  廿四  廿五
	//☀️   ㏴    ㏵    ㏶    ㏷    ㏸    ㏹    ㏺
	//🌛  廿六  廿七  廿八  廿九  三十  五月  初二
	//☀️   ㏻    ㏼    ㏽    ㏾
	//🌛  初三  初四  初五  初六
	//
	//立夏：5日 15ʰ31ᵐ2ˢ
	//小满：21日 4ʰ30ᵐ55ˢ
	//📅                    6月
	//     日    一    二    三    四    五    六
	//☀️                           ㏠    ㏡    ㏢
	//🌛                          初七  初八  初九
	//☀️   ㏣    ㏤    ㏥    ㏦    ㏧    ㏨    ㏩
	//🌛  初十  十一  十二  十三  十四  十五  十六
	//☀️   ㏪    ㏫    ㏬    ㏭    ㏮    ㏯    ㏰
	//🌛  十七  十八  十九  二十  廿一  廿二  廿三
	//☀️   ㏱    ㏲    ㏳    ㏴    ㏵    ㏶    ㏷
	//🌛  廿四  廿五  廿六  廿七  廿八  廿九  六月
	//☀️   ㏸    ㏹    ㏺    ㏻    ㏼    ㏽
	//🌛  初二  初三  初四  初五  初六  初七
	//
	//芒种：5日 19ʰ36ᵐ36ˢ
	//夏至：21日 12ʰ24ᵐ8ˢ
	//📅                    7月
	//     日    一    二    三    四    五    六
	//☀️                                       ㏠
	//🌛                                      初八
	//☀️   ㏡    ㏢    ㏣    ㏤    ㏥    ㏦    ㏧
	//🌛  初九  初十  十一  十二  十三  十四  十五
	//☀️   ㏨    ㏩    ㏪    ㏫    ㏬    ㏭    ㏮
	//🌛  十六  十七  十八  十九  二十  廿一  廿二
	//☀️   ㏯    ㏰    ㏱    ㏲    ㏳    ㏴    ㏵
	//🌛  廿三  廿四  廿五  廿六  廿七  廿八  廿九
	//☀️   ㏶    ㏷    ㏸    ㏹    ㏺    ㏻    ㏼
	//🌛  六月® 初二  初三  初四  初五  初六  初七
	//☀️   ㏽    ㏾
	//🌛  初八  初九
	//
	//小暑：7日 5ʰ50ᵐ41ˢ
	//大暑：22日 23ʰ15ᵐ21ˢ
	//📅                    8月
	//     日    一    二    三    四    五    六
	//☀️               ㏠    ㏡    ㏢    ㏣    ㏤
	//🌛              初十  十一  十二  十三  十四
	//☀️   ㏥    ㏦    ㏧    ㏨    ㏩    ㏪    ㏫
	//🌛  十五  十六  十七  十八  十九  二十  廿一
	//☀️   ㏬    ㏭    ㏮    ㏯    ㏰    ㏱    ㏲
	//🌛  廿二  廿三  廿四  廿五  廿六  廿七  廿八
	//☀️   ㏳    ㏴    ㏵    ㏶    ㏷    ㏸    ㏹
	//🌛  廿九  三十  七月  初二  初三  初四  初五
	//☀️   ㏺    ㏻    ㏼    ㏽    ㏾
	//🌛  初六  初七  初八  初九  初十
	//
	//立秋：7日 15ʰ39ᵐ59ˢ
	//处暑：23日 6ʰ20ᵐ12ˢ
	//📅                    9月
	//     日    一    二    三    四    五    六
	//☀️                                 ㏠    ㏡
	//🌛                                十一  十二
	//☀️   ㏢    ㏣    ㏤    ㏥    ㏦    ㏧    ㏨
	//🌛  十三  十四  十五  十六  十七  十八  十九
	//☀️   ㏩    ㏪    ㏫    ㏬    ㏭    ㏮    ㏯
	//🌛  二十  廿一  廿二  廿三  廿四  廿五  廿六
	//☀️   ㏰    ㏱    ㏲    ㏳    ㏴    ㏵    ㏶
	//🌛  廿七  廿八  廿九  八月  初二  初三  初四
	//☀️   ㏷    ㏸    ㏹    ㏺    ㏻    ㏼    ㏽
	//🌛  初五  初六  初七  初八  初九  初十  十一
	//
	//白露：7日 18ʰ38ᵐ36ˢ
	//秋分：23日 4ʰ1ᵐ47ˢ
	//📅                    10月
	//     日    一    二    三    四    五    六
	//☀️   ㏠    ㏡    ㏢    ㏣    ㏤    ㏥    ㏦
	//🌛  十二  十三  十四  十五  十六  十七  十八
	//☀️   ㏧    ㏨    ㏩    ㏪    ㏫    ㏬    ㏭
	//🌛  十九  二十  廿一  廿二  廿三  廿四  廿五
	//☀️   ㏮    ㏯    ㏰    ㏱    ㏲    ㏳    ㏴
	//🌛  廿六  廿七  廿八  廿九  三十  九月  初二
	//☀️   ㏵    ㏶    ㏷    ㏸    ㏹    ㏺    ㏻
	//🌛  初三  初四  初五  初六  初七  初八  初九
	//☀️   ㏼    ㏽    ㏾
	//🌛  初十  十一  十二
	//
	//寒露：8日 10ʰ22ᵐ7ˢ
	//霜降：23日 13ʰ26ᵐ40ˢ
	//📅                    11月
	//     日    一    二    三    四    五    六
	//☀️                     ㏠    ㏡    ㏢    ㏣
	//🌛                    十三  十四  十五  十六
	//☀️   ㏤    ㏥    ㏦    ㏧    ㏨    ㏩    ㏪
	//🌛  十七  十八  十九  二十  廿一  廿二  廿三
	//☀️   ㏫    ㏬    ㏭    ㏮    ㏯    ㏰    ㏱
	//🌛  廿四  廿五  廿六  廿七  廿八  廿九  十月
	//☀️   ㏲    ㏳    ㏴    ㏵    ㏶    ㏷    ㏸
	//🌛  初二  初三  初四  初五  初六  初七  初八
	//☀️   ㏹    ㏺    ㏻    ㏼    ㏽
	//🌛  初九  初十  十一  十二  十三
	//
	//立冬：7日 13ʰ37ᵐ48ˢ
	//小雪：22日 11ʰ4ᵐ38ˢ
	//📅                    12月
	//     日    一    二    三    四    五    六
	//☀️                                 ㏠    ㏡
	//🌛                                十四  十五
	//☀️   ㏢    ㏣    ㏤    ㏥    ㏦    ㏧    ㏨
	//🌛  十六  十七  十八  十九  二十  廿一  廿二
	//☀️   ㏩    ㏪    ㏫    ㏬    ㏭    ㏮    ㏯
	//🌛  廿三  廿四  廿五  廿六  廿七  廿八  廿九
	//☀️   ㏰    ㏱    ㏲    ㏳    ㏴    ㏵    ㏶
	//🌛  三十  冬月  初二  初三  初四  初五  初六
	//☀️   ㏷    ㏸    ㏹    ㏺    ㏻    ㏼    ㏽
	//🌛  初七  初八  初九  初十  十一  十二  十三
	//☀️   ㏾
	//🌛  十四
	//
	//大雪：7日 6ʰ32ᵐ39ˢ
	//冬至：22日 27ᵐ56ˢ
}

var l2stc = []struct {
	y, m, d    int
	AD, leap   bool
	yg, mg, dg int
	err        error
}{
	{2017, 6, 3, true, true, 2017, 7, 25, nil},                 //2017年闰六月初三 -> 2017-7-25
	{2017, 7, 3, true, true, 0, 0, 0, errConvLToG},             //2017年闰七月初三 -> error
	{2016, 12, 30, true, false, 2017, 1, 27, nil},              //2016年腊月三十 -> 2017-1-27
	{2017, 1, 1, true, false, 2017, 1, 28, nil},                //2017年正月初一 -> 2017-1-28
	{2017, 1, 30, true, false, 0, 0, 0, errDateNumExceedLunar}, //2017年正月三十 -> error
	{2017, 1, 31, true, false, 0, 0, 0, errDateNumLunar},       //2017年正月三十一 -> error
	{2017, 13, 1, true, false, 0, 0, 0, errMonthNum},           //2017年十三月初一 -> error
	{1987, 4, 1, true, false, 1987, 4, 28, nil},                //1987年四月初一 -> 1987-4-28
	{1987, 3, 30, true, false, 1987, 4, 27, nil},               //1987年三月三十 -> 1987-4-27
	{-1, 1, 5, true, false, 0, 0, 0, errYearNum},               //-1年正月初五 -> error
	{1, 12, 29, false, false, 1, 2, 11, nil},                   //公元前1年除夕 -> 1-2-11
	{1, 1, 1, true, false, 1, 2, 12, nil},                      //公元1年春节 -> 1-2-12
	{2, 12, 30, false, false, 0, 2, 23, nil},                   //公元前2年除夕 -> 0-2-23
	{1, 1, 1, false, false, 0, 2, 24, nil},                     //公元前1年春节 -> 0-2-24
	{211, 5, 5, false, false, -210, 6, 8, nil},                 //公元前211年五月初五 -> -210-6-8
	{389, 11, 1, false, false, -388, 10, 16, nil},              //公元前389年十一月初一 -> -388-10-16
	{722, 1, 1, false, false, -722, 12, 17, nil},               //公元前722年春节 -> -722-12-17
	{159, 9, 1, false, true, -158, 10, 25, nil},                //公元前159年后九月初一 -> -158-10-25
	{1582, 9, 18, true, false, 1582, 10, 4, nil},               //公元1582年九月十八 -> 1582-10-4
	{1582, 9, 19, true, false, 1582, 10, 15, nil},              //公元1582年九月十九 -> 1582-10-15
}

func TestLunarToSolar(t *testing.T) {
	for _, tc := range l2stc {
		yg, mg, dg, err := LunarToSolar(tc.y, tc.m, tc.d, tc.AD, tc.leap)
		if tc.err != err || tc.yg != yg || tc.mg != mg || tc.dg != dg {
			t.Errorf("got err: %v date: %d-%d-%d, expected err: %v date: %d-%d-%d\n", err, yg, mg, dg, tc.err, tc.yg, tc.mg, tc.dg)
		}
	}
}

var s2ltc = []struct {
	y, m, d    int
	AD         bool
	yl, ml, dl int
	leap       bool
	err        error
}{
	{1978, 2, 6, true, 1977, 12, 29, false, nil},
	{1978, 4, 5, true, 1978, 2, 28, false, nil},
	{1978, 4, 5, true, 1978, 2, 28, false, nil},
	{2033, 12, 22, true, 2033, 11, 1, true, nil},
	{2014, 2, 29, true, 0, 0, 0, false, errDateNumExceed},
	{1582, 10, 4, true, 1582, 9, 18, false, nil},
	{237, 12, 23, true, 237, 12, 19, false, nil},
	{238, 1, 2, true, 237, 12, 29, false, nil},
	{241, 7, 31, true, 241, 6, 6, true, nil},
	{208, 10, 25, false, -207, 9, 29, false, nil},
	{208, 10, 26, false, -207, 9, 1, true, nil},
	{208, 11, 24, false, -207, 9, 30, true, nil},
	{208, 11, 25, false, -207, 10, 1, false, nil},
	{639, 11, 18, false, -638, 12, 29, false, nil},
	{639, 11, 19, false, -638, 13, 1, true, nil},
}

func TestSolarToLunar(t *testing.T) {
	for _, tc := range s2ltc {
		yl, ml, dl, leap, err := SolarToLunar(tc.y, tc.m, tc.d, tc.AD)
		if tc.err != err || tc.yl != yl || tc.ml != ml || tc.dl != dl || tc.leap != leap {
			t.Errorf("got err: %v date: %d-%d-%d leap: %v, expected err: %v date: %d-%d-%d leap: %v\n", err, yl, ml, dl, leap, tc.err, tc.yl, tc.ml, tc.dl, tc.leap)
		}
	}
}
